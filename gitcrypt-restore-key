#!/usr/bin/env sh

[ -z "$GIT_DIR" ] && GIT_DIR=".git"
GIT_DIR=$(eval echo "${GIT_DIR}" 2> /dev/null)
GIT_DIR=`readlink -e "${GIT_DIR}"`

PASS=$1

die() {
    echo "Error: $@"
    exit -1
}

[ -z "$GITCRYPT_KEY_ENCRYPTED" ] && die "GITCRYPT_KEY_ENCRYPTED is not set"
GITCRYPT_KEY_ENCRYPTED=$(eval echo "${GITCRYPT_KEY_ENCRYPTED}" 2> /dev/null)
GITCRYPT_KEY_ENCRYPTED=`readlink -e "$GITCRYPT_KEY_ENCRYPTED"` || die "can't readlink from ${GITCRYPT_KEY_ENCRYPTED}"

[ -z "$GITCRYPT_KEY" ] && GITCRYPT_KEY=$GIT_DIR/key_decrypt.tmp

GITCRYPT_ENCRYPTED_FILE=`eval echo ${GITCRYPT_KEY_ENCRYPTED} 2> /dev/null` || exit 1
GITCRYPT_FILE=`eval echo ${GITCRYPT_KEY} 2> /dev/null` || exit 1

GITCRYPT_ENCRYPTED_FILE=`readlink -e "${GITCRYPT_ENCRYPTED_FILE}"`

decrypt_file() {
    if [ "$PASS" == "gpg" ]; then
      cat "$GITCRYPT_ENCRYPTED_FILE" | gpg --decrypt > "$GITCRYPT_FILE" || exit 1
    else
      openssl enc -d -base64 -aes-256-cbc -k "$PASS" -in "$GITCRYPT_ENCRYPTED_FILE" > "$GITCRYPT_FILE" || exit 1
    fi

    chmod 600 "${GITCRYPT_FILE}" &> /dev/null || exit 1

    export GITCRYPT_TIMER="3"
    export GITCRYPT_TIMEOUT="6"
    setsid sh -c "gitcrypt-watchdog \"$GITCRYPT_FILE\" &" &> /dev/null
}

if [ ! -s "$GITCRYPT_FILE" ]; then
    decrypt_file
else
    # try to deted lost(unwatched) file, for example when crash occured
    DANGLING="40"

    AGE=$((`date +%s` - `stat -c %Z "${GITCRYPT_FILE}"`))
    if (( "$AGE" > "$DANGLING" )); then
        rm -f "${GITCRYPT_FILE}" &> /dev/null
        decrypt_file
    else
        touch -c "${GITCRYPT_FILE}"
    fi
fi

if [ -s "$GITCRYPT_FILE" ]; then
    cat "${GITCRYPT_FILE}" || dir "can't read content of encrypted key: ${GITCRYPT_FILE}"
    exit 0
else
    exit 1
fi

